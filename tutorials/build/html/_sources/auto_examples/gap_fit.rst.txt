
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/gap_fit.sh"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_gap_fit.sh>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_gap_fit.sh:

Fitting GAP 
===========

In this tutorial, you will learn to write a bash-script that fits GAP on your DFT data. 
GAP is implemented as a command line tool gap_fit
which takes many parameters. 
The parameters are specified in the following, and then passed to gap_fit

.. GENERATED FROM PYTHON SOURCE LINES 8-11

First, we define our parameters which we want to vary later
In this case, that's the Cut-off,
the output file and the input file.

.. GENERATED FROM PYTHON SOURCE LINES 13-16

.. code-block:: Bash

    CUT_OFF=3.0
    GAP_FILE=gap/SOAP.xml
    INPUT_FILE=gap/train_500.xyz

.. GENERATED FROM PYTHON SOURCE LINES 17-18

Next, we have the parameters for GAP. 

.. GENERATED FROM PYTHON SOURCE LINES 19-19

.. code-block:: Bash

    GAP_PARAMS=(
.. GENERATED FROM PYTHON SOURCE LINES 20-21

First, we have the parameters for the 2 body distance descriptor

.. GENERATED FROM PYTHON SOURCE LINES 22-30

.. code-block:: Bash

    distance_2b
    cutoff=$CUT_OFF
    covariance_type=ard_se
    delta=1
    theta_uniform=1.0
    sparse_method=uniform
    n_sparse=300
    Z1=18
    Z2=18 :
.. GENERATED FROM PYTHON SOURCE LINES 31-32

Then we have the parameters for the SOAP descriptor

.. GENERATED FROM PYTHON SOURCE LINES 33-33

.. code-block:: Bash

    soap 
.. GENERATED FROM PYTHON SOURCE LINES 34-35

`n_max` and `l_max` is the order of expansion in spherical harmonics

.. GENERATED FROM PYTHON SOURCE LINES 36-37

.. code-block:: Bash

    l_max=6
    n_max=6
.. GENERATED FROM PYTHON SOURCE LINES 38-39

`atom_sigma` is the smearing of the atomic position

.. GENERATED FROM PYTHON SOURCE LINES 40-41

.. code-block:: Bash

    atom_sigma=0.5
    zeta=4
.. GENERATED FROM PYTHON SOURCE LINES 42-43

Then we specify the cut-off for the neighborhood around the centered atom

.. GENERATED FROM PYTHON SOURCE LINES 44-45

.. code-block:: Bash

    cutoff=$CUT_OFF
    cutoff_transition_width=0.5
.. GENERATED FROM PYTHON SOURCE LINES 46-47

and some magic settings

.. GENERATED FROM PYTHON SOURCE LINES 48-51

.. code-block:: Bash

    covariance_type=dot_product
    n_sparse=300
    sparse_method=random
    delta=1.0
.. GENERATED FROM PYTHON SOURCE LINES 52-53

Finally, we specify the number of different species and the atomic charge number of the species

.. GENERATED FROM PYTHON SOURCE LINES 54-57

.. code-block:: Bash

    n_Z=1 Z={18}

    )

.. GENERATED FROM PYTHON SOURCE LINES 58-59

Next, we have some general parameters

.. GENERATED FROM PYTHON SOURCE LINES 60-62

.. code-block:: Bash

    GEN_PARAMS=(
    e0_method=average 
    gap={"${GAP_PARAMS[@]}"}
.. GENERATED FROM PYTHON SOURCE LINES 63-64

Here we specify the input file (the atomic coordinates and forces) and the output file (the machine learned potential)

.. GENERATED FROM PYTHON SOURCE LINES 65-68

.. code-block:: Bash

    at_file=$INPUT_FILE
    gp_file=$GAP_FILE 
    default_sigma={0.003 0.15 0 0}
    sparse_jitter=1.0e-10
.. GENERATED FROM PYTHON SOURCE LINES 69-70

and then we have some parsing options for the input file

.. GENERATED FROM PYTHON SOURCE LINES 71-74

.. code-block:: Bash

    force_parameter_name=forces
    energy_parameter_name=energy
    )

.. GENERATED FROM PYTHON SOURCE LINES 75-76

Finally, we print our parameters and then run the gap_fit command

.. GENERATED FROM PYTHON SOURCE LINES 76-78

.. code-block:: Bash

    echo ${GEN_PARAMS[@]}

    gap_fit "${GEN_PARAMS[@]}"

.. _sphx_glr_download_auto_examples_gap_fit.sh:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Bash source code: gap_fit.sh <gap_fit.sh>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: gap_fit.zip <gap_fit.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
